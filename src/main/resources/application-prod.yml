server:
  port: 5000

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: API-GATEWAY
#  security:
#    oauth2:
##      resourceserver:
##        jwt:
##          issuer-uri: "http://localhost:8080/auth/realms/hc-intershop-realm"
#      client:
#        provider:
#          keycloak:
#            issuer-uri: "http://localhost:8080/auth/realms/hc-intershop-realm"
#        registration:
#          spring-cloud-gateway-client:
#            client-id: "hc-spring-cloud-gateway-client"
#            client-secret: "ceb57dd0-52b3-4532-b92a-91f7e77cf321"
#            provider: "keycloak"
#            authorization-grant-type: "authorization_code"
#            redirect-uri: "http://localhost:5000/login/oauth2/code/hc-spring-cloud-gateway-client"
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://a7c25898957164f709668a8747f45614-1191296837.eu-west-2.elb.amazonaws.com"
            allowedMethods:
              - GET
              - PUT
              - POST
              - PATCH
              - DELETE
              - OPTIONS
            allowedHeaders: "Authorization, Content-Type, X-token, Role, x-requested-with, if-modified-since, x-requested-by"
            Access-Control-Allow-Credentials: true
      routes:
        - id: EMPLOYEE-SERVICE
          uri: lb://EMPLOYEE-SERVICE
          predicates:
            - Path=/api/employees/**
          filters:
            - name: CircuitBreaker
              args:
                name: EMPLOYEE-SERVICE
                fallbackuri: forward:/employeeServiceFallBack
        - id: DEPARTMENT-SERVICE
          uri: lb://DEPARTMENT-SERVICE
          predicates:
            - Path=/api/departments/**
          filters:
            - name: CircuitBreaker
              args:
                name: DEPARTMENT-SERVICE
                fallbackuri: forward:/departmentServiceFallBack
        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/products/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallbackuri: forward:/productServiceFallBack
        - id: INVENTORY-SERVICE
          uri: lb://INVENTORY-SERVICE
          predicates:
            - Path=/api/inventories/**
          filters:
            - name: CircuitBreaker
              args:
                name: INVENTORY-SERVICE
                fallbackuri: forward:/inventoryServiceFallBack
        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/api/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDER-SERVICE
                fallbackuri: forward:/orderServiceFallBack
        - id: PAYMENT-SERVICE
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/api/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENT-SERVICE
                fallbackuri: forward:/paymentServiceFallBack
        - id: NOTIFICATION-SERVICE
          uri: lb://NOTIFICATION-SERVICE
          predicates:
            - Path=/api/notifications/**
          filters:
            - name: CircuitBreaker
              args:
                name: NOTIFICATION-SERVICE
                fallbackuri: forward:/notificationServiceFallBack
    loadbalancer:
      ribbon:
        enabled: false

hystrix:
  command:
    fallbackcmd:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 4000

management:
  endpoints:
    web:
      exposure:
        include: hystrix.stream

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://af799cbd9e05549758b7c3059ec8616e-745050297.eu-west-2.elb.amazonaws.com/eureka/
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.uuid}

